using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Models.Migrations
{
    public partial class generateIds : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("00000000-0000-0000-0000-000000000001"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 187, 182, 220, 151, 65, 217, 94, 153, 178, 54, 232, 203, 23, 240, 179, 250, 142, 76, 114, 234, 227, 132, 251, 151, 63, 231, 135, 191, 113, 135, 168, 206, 110, 71, 101, 50, 188, 241, 25, 228, 5, 210, 173, 148, 164, 255, 223, 156, 92, 27, 145, 241, 145, 60, 12, 101, 157, 253, 9, 21, 64, 225, 74, 239 }, new byte[] { 7, 140, 219, 236, 175, 73, 96, 120, 8, 86, 208, 179, 216, 55, 112, 142, 119, 3, 172, 29, 4, 66, 55, 140, 122, 142, 198, 90, 103, 3, 82, 41, 255, 187, 97, 35, 79, 141, 103, 92, 4, 40, 54, 204, 79, 122, 144, 20, 90, 225, 131, 192, 145, 240, 161, 49, 115, 136, 49, 223, 166, 71, 130, 248, 226, 211, 221, 17, 238, 84, 124, 227, 26, 194, 184, 211, 90, 109, 76, 246, 13, 27, 19, 196, 170, 87, 162, 91, 99, 190, 179, 71, 211, 228, 153, 222, 98, 120, 30, 210, 30, 234, 166, 53, 212, 22, 9, 0, 203, 178, 238, 188, 44, 29, 191, 230, 76, 213, 92, 99, 123, 223, 161, 234, 64, 132, 205, 102 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("00000000-0000-0000-0000-000000000001"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 143, 148, 222, 77, 88, 234, 27, 215, 6, 233, 20, 99, 212, 121, 159, 174, 136, 214, 199, 232, 150, 72, 146, 108, 133, 53, 198, 104, 203, 24, 182, 48, 138, 221, 151, 1, 91, 244, 79, 79, 131, 204, 248, 171, 236, 242, 90, 129, 240, 1, 201, 61, 202, 253, 72, 166, 112, 107, 34, 63, 239, 192, 147, 198 }, new byte[] { 150, 78, 4, 130, 245, 32, 42, 72, 145, 223, 165, 32, 159, 187, 192, 89, 17, 238, 182, 235, 39, 42, 223, 246, 206, 244, 53, 162, 62, 183, 215, 14, 144, 156, 9, 218, 65, 104, 209, 32, 235, 132, 74, 209, 15, 255, 95, 14, 236, 165, 29, 247, 179, 177, 240, 116, 14, 79, 100, 3, 127, 135, 155, 1, 59, 140, 161, 54, 176, 108, 57, 197, 222, 242, 32, 164, 176, 53, 94, 14, 16, 157, 102, 105, 63, 223, 125, 162, 36, 88, 161, 41, 52, 143, 82, 56, 35, 70, 187, 24, 220, 52, 35, 245, 166, 20, 16, 202, 35, 25, 80, 248, 222, 36, 214, 52, 149, 187, 51, 251, 237, 116, 209, 252, 30, 1, 159, 116 } });
        }
    }
}
