using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Models.Migrations
{
    public partial class userMssSendRec : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("00000000-0000-0000-0000-000000000001"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 223, 163, 221, 154, 171, 169, 106, 70, 195, 136, 24, 209, 5, 108, 4, 79, 147, 234, 113, 10, 31, 142, 215, 23, 255, 153, 42, 30, 62, 156, 38, 210, 198, 165, 211, 68, 70, 164, 239, 27, 138, 223, 23, 109, 129, 118, 45, 147, 80, 152, 94, 172, 41, 209, 33, 198, 46, 144, 21, 14, 72, 197, 235, 98 }, new byte[] { 69, 177, 73, 96, 43, 30, 54, 177, 68, 98, 180, 188, 38, 19, 48, 51, 198, 26, 155, 70, 253, 191, 181, 151, 148, 46, 189, 118, 80, 21, 189, 137, 198, 223, 120, 144, 48, 143, 166, 129, 192, 39, 146, 227, 61, 75, 23, 14, 187, 165, 136, 130, 2, 102, 187, 167, 113, 168, 57, 168, 3, 21, 196, 176, 129, 202, 100, 47, 18, 199, 220, 38, 67, 116, 240, 239, 229, 74, 100, 130, 119, 115, 170, 150, 4, 224, 234, 4, 252, 237, 236, 182, 119, 10, 146, 113, 193, 99, 155, 227, 15, 42, 110, 115, 96, 2, 225, 66, 196, 97, 220, 174, 24, 105, 244, 13, 146, 225, 249, 212, 23, 16, 190, 38, 174, 245, 23, 175 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("00000000-0000-0000-0000-000000000001"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 109, 148, 255, 172, 250, 90, 109, 243, 30, 60, 18, 108, 114, 247, 24, 190, 150, 58, 11, 2, 212, 1, 240, 198, 98, 102, 194, 167, 47, 106, 175, 1, 163, 204, 0, 143, 78, 21, 116, 115, 173, 72, 26, 119, 33, 105, 43, 210, 69, 221, 46, 60, 227, 131, 195, 12, 54, 87, 218, 90, 166, 78, 127, 200 }, new byte[] { 100, 122, 146, 119, 230, 60, 253, 157, 86, 97, 207, 139, 99, 213, 253, 68, 6, 221, 143, 164, 50, 61, 125, 117, 28, 134, 152, 119, 47, 40, 208, 27, 150, 171, 224, 80, 240, 225, 227, 186, 162, 139, 32, 237, 252, 194, 119, 1, 140, 49, 217, 19, 81, 243, 129, 223, 251, 180, 202, 137, 137, 240, 46, 232, 144, 225, 145, 68, 27, 193, 46, 201, 177, 83, 139, 218, 117, 118, 114, 57, 230, 27, 33, 236, 32, 161, 176, 73, 100, 49, 168, 171, 57, 184, 9, 211, 25, 154, 95, 199, 79, 232, 124, 98, 39, 238, 149, 15, 180, 202, 58, 221, 106, 117, 128, 82, 20, 147, 189, 251, 67, 8, 27, 216, 248, 167, 226, 22 } });
        }
    }
}
