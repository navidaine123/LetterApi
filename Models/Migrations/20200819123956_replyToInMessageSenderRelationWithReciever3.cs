using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Models.Migrations
{
    public partial class replyToInMessageSenderRelationWithReciever3 : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("00000000-0000-0000-0000-000000000001"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 198, 73, 148, 189, 3, 9, 226, 243, 209, 136, 32, 44, 180, 146, 187, 95, 63, 201, 163, 58, 81, 161, 50, 94, 14, 85, 103, 178, 242, 40, 22, 97, 246, 159, 152, 182, 122, 231, 108, 216, 239, 51, 180, 17, 34, 235, 10, 244, 6, 81, 4, 205, 13, 243, 57, 142, 5, 144, 118, 217, 120, 123, 25, 97 }, new byte[] { 67, 5, 117, 24, 193, 66, 34, 214, 62, 171, 128, 125, 109, 58, 240, 90, 147, 66, 5, 21, 181, 177, 119, 78, 221, 79, 134, 54, 143, 21, 56, 49, 123, 219, 83, 190, 254, 250, 124, 230, 57, 190, 66, 232, 102, 38, 64, 102, 34, 34, 169, 4, 175, 21, 74, 86, 137, 66, 226, 91, 9, 219, 70, 102, 66, 223, 50, 246, 124, 140, 217, 74, 55, 157, 167, 127, 147, 227, 145, 120, 7, 160, 81, 47, 102, 136, 144, 192, 206, 222, 105, 200, 110, 213, 15, 182, 57, 189, 128, 39, 29, 137, 176, 215, 101, 248, 213, 7, 107, 190, 139, 57, 218, 8, 26, 112, 160, 1, 155, 248, 200, 122, 104, 202, 36, 173, 247, 225 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("00000000-0000-0000-0000-000000000001"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 103, 227, 196, 169, 231, 1, 69, 71, 105, 168, 95, 242, 181, 229, 124, 120, 102, 160, 198, 58, 162, 52, 130, 198, 210, 14, 111, 203, 12, 245, 23, 98, 253, 143, 39, 164, 246, 161, 142, 252, 184, 46, 75, 2, 46, 53, 21, 105, 11, 111, 25, 166, 146, 210, 42, 250, 5, 77, 165, 234, 148, 18, 229, 229 }, new byte[] { 70, 50, 170, 244, 173, 36, 172, 64, 228, 132, 122, 79, 171, 36, 32, 27, 97, 235, 197, 69, 98, 228, 57, 105, 197, 119, 240, 131, 4, 189, 239, 195, 201, 197, 22, 190, 208, 15, 89, 93, 243, 106, 213, 198, 94, 23, 144, 8, 253, 11, 248, 133, 114, 17, 131, 159, 93, 247, 129, 238, 184, 48, 128, 91, 112, 74, 145, 201, 209, 97, 131, 112, 243, 18, 147, 224, 234, 10, 50, 16, 136, 205, 225, 1, 64, 8, 219, 116, 113, 101, 51, 62, 48, 98, 127, 21, 106, 205, 61, 124, 134, 119, 31, 143, 186, 202, 101, 21, 237, 62, 240, 227, 206, 47, 67, 6, 208, 252, 234, 145, 48, 105, 97, 29, 81, 190, 53, 147 } });
        }
    }
}
